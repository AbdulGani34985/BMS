{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "_static_widget",
    "name" : "-Static widget",
    "deprecated" : false,
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "static",
      "sizeX" : 7.5,
      "sizeY" : 3,
      "resources" : [ ],
      "templateHtml" : "<div fxFlex fxLayout=\"column\" style=\"height: 100%;\" fxLayoutAlign=\"space-around stretch\">\r\n    <h3 style=\"text-align: center;\">My first static widget.</h3>\r\n    <button mat-raised-button color=\"primary\" (click)=\"showAlert()\">Click me</button>\r\n  </div>",
      "templateCss" : "",
      "controllerScript" : "self.onInit = function() {\r\n\r\n    self.ctx.$scope.showAlert = function() {\r\n        var alertContent = self.ctx.settings.alertContent;\r\n        if (!alertContent) {\r\n            alertContent = \"Content derived from alertContent property of widget settings.\";\r\n        }\r\n        window.alert(alertContent);  \r\n    };\r\n\r\n}",
      "settingsSchema" : "{\r\n    \"schema\": {\r\n        \"type\": \"object\",\r\n        \"title\": \"Settings\",\r\n        \"properties\": {\r\n            \"alertContent\": {\r\n                \"title\": \"Alert content\",\r\n                \"type\": \"string\",\r\n                \"default\": \"Content derived from alertContent property of widget settings.\"\r\n            }\r\n        }\r\n    },\r\n    \"form\": [\r\n        \"alertContent\"\r\n    ]\r\n}",
      "dataKeySettingsSchema" : "",
      "settingsDirective" : "tb-html-card-widget-settings",
      "defaultConfig" : "{\"datasources\":[{\"type\":\"static\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.15479322438769105,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":false,\"backgroundColor\":\"rgb(255, 255, 255)\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{\"cardHtml\":\"<div class='card'>HTML code here</div>\",\"cardCss\":\".card {\\n    font-weight: bold;\\n    font-size: 32px;\\n    color: #999;\\n    width: 100%;\\n    height: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\"},\"title\":\"HTML Card\",\"dropShadow\":true}"
    },
    "externalId" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "b16ae940-e714-11ee-a41f-419792e9cd8f"
    },
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "b16ae940-e714-11ee-a41f-419792e9cd8f"
    },
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}